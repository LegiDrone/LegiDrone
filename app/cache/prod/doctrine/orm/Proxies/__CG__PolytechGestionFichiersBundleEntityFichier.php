<?php

namespace Proxies\__CG__\Polytech\GestionFichiersBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Fichier extends \Polytech\GestionFichiersBundle\Entity\Fichier implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'id', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'type', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'titre', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'extension', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'lien', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'auteur', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'taille', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'dateValiditee', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'file', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'departement', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'entreprise', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'drone');
        }

        return array('__isInitialized__', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'id', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'type', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'titre', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'extension', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'lien', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'auteur', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'taille', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'dateValiditee', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'file', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'departement', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'entreprise', '' . "\0" . 'Polytech\\GestionFichiersBundle\\Entity\\Fichier' . "\0" . 'drone');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Fichier $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', array($titre));

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function setExtension($extension)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtension', array($extension));

        return parent::setExtension($extension);
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', array());

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtension', array());

        return parent::getExtension();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setLien($lien)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLien', array($lien));

        return parent::setLien($lien);
    }

    /**
     * {@inheritDoc}
     */
    public function getLien()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLien', array());

        return parent::getLien();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuteur($auteur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuteur', array($auteur));

        return parent::setAuteur($auteur);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuteur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuteur', array());

        return parent::getAuteur();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaille($taille)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaille', array($taille));

        return parent::setTaille($taille);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaille', array());

        return parent::getTaille();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateValiditee($dateValiditee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateValiditee', array($dateValiditee));

        return parent::setDateValiditee($dateValiditee);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateValiditee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateValiditee', array());

        return parent::getDateValiditee();
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartement', array());

        return parent::getDepartement();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartement(\Polytech\DepartementBundle\Entity\Departement $departement = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartement', array($departement));

        return parent::setDepartement($departement);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntreprise()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntreprise', array());

        return parent::getEntreprise();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntreprise(\Polytech\ProjetCoBundle\Entity\Entreprises $entreprise = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntreprise', array($entreprise));

        return parent::setEntreprise($entreprise);
    }

    /**
     * {@inheritDoc}
     */
    public function getDrone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDrone', array());

        return parent::getDrone();
    }

    /**
     * {@inheritDoc}
     */
    public function setDrone(\Polytech\DronesBundle\Entity\Drones $drone = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDrone', array($drone));

        return parent::setDrone($drone);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', array());

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadDir', array());

        return parent::getUploadDir();
    }

    /**
     * {@inheritDoc}
     */
    public function deleteFromServer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleteFromServer', array());

        return parent::deleteFromServer();
    }

}
